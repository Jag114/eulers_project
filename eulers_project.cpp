#include <iostream>
#include <string> //problem 4

int problem1() {
    /*
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
    */
    int sum = 0;

    for (int i = 0; i < 1000; i++) {
        if (i % 5 == 0 || i % 3 == 0) {
            sum += i;
        }
    }

    printf("Sum = \%i", sum);
    return sum;
}

int problem2() {
    /*
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    */
    int sum = 0;
    int terms = 100;
    int current = 1;
    int previous = 0;

    for (int i = 0; i < terms; i++) {
        if (current > 4000000) break;
        current = current + previous;
        previous = current - previous;
        if (current < 4000000) {
            if (current % 2 == 0) {
                sum += current;
            }
        }
        printf("\%i\n", current);
    }

    printf("Sum = \%i", sum);
    return sum;
}

long problem3() {
    /*
    The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143 ?
    */
    long long n = 600851475143;
    int i = 3;
    while (n % 2 == 0) {
        n /= 2;
    }
    while (i <= sqrt(n)) {
        if (n % i == 0) {
            n /= i;

        }
        else {
            i += 2;
        }
    }
    printf("largest = \%lld", n);

    return n;
}

int problem4() {
    /*
    A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.
    Find the largest palindrome made from the product of two 3-digit numbers.
    */
    int palindrome = 0, x, y;

    for (int a = 100; a < 1000; a++) {
        for (int b = 100; b < 1000; b++) {
            int temp = a * b;
            std::string tempString = std::to_string(temp);
            for (int i = 0; i < tempString.size(); i++) {
                if (tempString[i] != tempString[tempString.size() - 1 - i]) {
                    temp = 0;
                    break;
                }
            }
            if (temp != 0) {
                if (palindrome < temp) {
                    palindrome = temp;
                    x = a;
                    y = b;
                }
            }
        }
    }
    printf("A = \%i\n", x);
    printf("B = \%i\n", y);

    printf("palindrome = \%i", palindrome);

    return palindrome;
}

int main()
{
    problem4();
}


